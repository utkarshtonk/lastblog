{"version":3,"sources":["components/Header.js","components/Home.js","components/PostDetails.js","components/CreatePost.js","components/EditPost.js","components/Login.js","components/Register.js","components/PrivateRoute.js","App.js","index.js"],"names":["Header","React","createElement","className","Link","to","Home","posts","setPosts","useState","useEffect","async","response","fetch","ok","Error","data","json","error","console","fetchPosts","map","post","key","id","concat","title","summary","PostDetails","useParams","setPost","fetchPost","Fragment","content","CreatePost","setTitle","setContent","onSubmit","e","preventDefault","method","headers","Content-Type","body","JSON","stringify","log","htmlFor","type","value","onChange","target","required","EditPost","Login","email","setEmail","password","setPassword","Register","PrivateRoute","_ref","isAuthenticated","Outlet","Navigate","replace","App","Router","Routes","Route","path","element","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3b928df5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/components.css';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <nav>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/create\">Create Post</Link></li>\n          <li><Link to=\"/login\">Login</Link></li>\n          <li><Link to=\"/register\">Register</Link></li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/components.css';\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // Fetch posts from the backend API\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/posts');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <h1>Blog Posts</h1>\n      <div className=\"post-list\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"post-preview\">\n            <Link to={`/post/${post.id}`} className=\"post-link\">\n              <h2>{post.title}</h2>\n              <p>{post.summary}</p>\n              <div className=\"read-more\">Read More</div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/components.css';\n\nconst PostDetails = () => {\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    // Fetch post details from the backend API\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/posts/${id}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPost(data);\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      }\n    };\n    fetchPost();\n  }, [id]);\n\n  return (\n    <div className=\"post-details\">\n      {post ? (\n        <>\n          <h1 className=\"post-title\">{post.title}</h1>\n          <div className=\"post-content\">{post.content}</div>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default PostDetails;","import React, { useState } from 'react';\nimport '../styles/components.css';\n\nconst CreatePost = () => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Send post data to the backend API\n    const response = await fetch('/api/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title, content }),\n    });\n    const data = await response.json();\n    console.log(data);\n    // Reset form fields\n    setTitle('');\n    setContent('');\n  };\n\n  return (\n    <div className=\"create-post\">\n      <h1>Create Post</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"content\">Content</label>\n          <textarea\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Create Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/components.css';\n\nconst EditPost = () => {\n  const { id } = useParams();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    // Fetch post details from the backend API\n    const fetchPost = async () => {\n      const response = await fetch(`/api/posts/${id}`);\n      const data = await response.json();\n      setTitle(data.title);\n      setContent(data.content);\n    };\n    fetchPost();\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Update post data in the backend API\n    const response = await fetch(`/api/posts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title, content }),\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return (\n    <div className=\"edit-post\">\n      <h1>Edit Post</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"content\">Content</label>\n          <textarea\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Update Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditPost;","import React, { useState } from 'react';\nimport '../styles/components.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Send login data to the backend API\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await response.json();\n    console.log(data);\n    // Handle successful login\n  };\n\n  return (\n    <div className=\"login\">\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport '../styles/components.css';\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Send registration data to the backend API\n    const response = await fetch('/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await response.json();\n    console.log(data);\n    // Handle successful registration\n  };\n\n  return (\n    <div className=\"register\">\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst PrivateRoute = ({ isAuthenticated }) => {\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" replace />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport PostDetails from './components/PostDetails';\nimport CreatePost from './components/CreatePost';\nimport EditPost from './components/EditPost';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport PrivateRoute from './components/PrivateRoute';\nimport './styles/global.css';\n\nconst App = () => {\n  const isAuthenticated = true; // Replace with your actual authentication logic\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route element={<PrivateRoute isAuthenticated={isAuthenticated} />}>\n            <Route path=\"/post/:id\" element={<PostDetails />} />\n            <Route path=\"/create\" element={<CreatePost />} />\n            <Route path=\"/edit/:id\" element={<EditPost />} />\n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}